from django.db import models


class Device(models.Model):
    name = models.CharField(max_length=100)
    slug = models.SlugField(max_length=100, unique=True,
        help_text="Url friendly name. Leaving it in blank will be autogenerated, but if defined must be unique."
    )
    active = models.BooleanField(default=True)
    model = models.CharField(max_length=20, blank=True)
    address = models.CharField(max_length=16, unique=True)
    description = models.CharField(max_length=255, blank=True)

    class Meta:
        ordering = ('active', 'pk')

    def __unicode__(self):
        return self.name


class Var(models.Model):
    # Types defined in https://docs.python.org/2/library/struct.html#format-characters
    TYPE_CHOICES = (
        ('?', "Bool"),
        ('c', "Char (1b)"),
        ('b', "Singed Char (1b)"),
        ('B', "Unsigned Char (1b)"),
        ('h', "Short (2b)"),
        ('H', "Unsigned Short (2b)"),
        ('i', "Integer (4b)"),
        ('I', "Unsigned Integer (4b)"),
        ('q', "Long (8b)"),
        ('Q', "Unsigned Long (8b)"),
        ('f', "Float (4b)"),
        ('d', "Double (8b)"),
    )
    name = models.CharField(max_length=100)
    slug = models.SlugField(max_length=100, unique=True,
        help_text="Url friendly name. Leaving it in blank will be autogenerated, but if defined must be unique."
    )
    active = models.BooleanField(default=True)
    device = models.ForeignKey(Device, related_name="vars")
    var_type = models.CharField("Type", max_length=10, blank=True, choices=TYPE_CHOICES, default=TYPE_CHOICES[0][0])
    units = models.CharField(max_length=10, blank=True)
    value = models.FloatField(blank=True, null=True, default=0)
    description = models.CharField(max_length=255, blank=True)
    # TODO: Add magnitude

    class Meta:
        order_with_respect_to = 'device'

    def __unicode__(self):
        return '[%s] %s' % (self.device.slug, self.name)
